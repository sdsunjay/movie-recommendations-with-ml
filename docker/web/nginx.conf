# source https://github.com/nginxinc/docker-nginx
# source https://gist.github.com/tompave/8590031
user  nginx;

load_module modules/ngx_http_geoip2_module.so;
load_module modules/ngx_stream_geoip2_module.so;
# load_module /etc/nginx/modules/ngx_http_geoip_module.so;

# A single worker is enough for load balancing and reverse proxing.
# However:
#  Disk I/O can block an nginx worker (depends on disk read performance).
#  If the server is serving a lot of static files (e.g. assets) it is
#  a good idea to increase the number of worker processes.
worker_processes  5;

# The limit on the maximum number of open files for worker processes.
# "open files" is intended as UNIX open file descriptors.
# This overrides the limit set by the OS for the user the workers run as.
# Run `ulimit -a` in a shell to see the current limit.
worker_rlimit_nofile 2048;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


# --------------------------------------------------------

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex on;        # "on" if nginx worker_processes > 1
  use epoll;               # best for Linux 2.6+ ("kqueue" for FreeBSD, OSX)
}


http {
    charset UTF-8;
    # disables emitting nginx version in error messages
    # and in the “Server” response header field
    server_tokens off;


    # MIME types
    include /etc/nginx/mime.types;

    # fallback MIME type if the client doesn't specify it.
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # log
    access_log /var/log/nginx/access.log combined;

   # GeoIP module
    geoip2 /usr/local/share/GeoIP/GeoLite2-Country.mmdb {
        auto_reload 30m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_code default=US source=$server_addr country iso_code;
        $geoip2_data_country_name country names en;
    }

    geoip2 /usr/local/share/GeoIP/GeoLite2-City.mmdb {
        $geoip2_data_city_name default=Boston city names en;
    }    
    
# GeoIP database
  map $geoip2_data_country_code $allowed_country {
    default yes;
    CN no; #China
    RU no; #Russia
    HK no; #Hong Kong
    IR no; #Iran
    VN no; #Vietnam
    TR no; #Turkey
    EG no; #Egypt
    MX no; #Mexico
    JP no; #Japan
    KR no; #South Korea
    KP no; #North Korea
    PE no; #Peru
    BR no; #Brazil
    UA no; #Ukraine
    ID no; #Indonesia
    TH no; #Thailand
  }


      # TCP settings
     tcp_nopush on;
     tcp_nodelay off;


     # use unix sendfile()
     sendfile on;

     # gzip compression
     gzip on;
     gzip_http_version 1.0;
     gzip_proxied any;
     gzip_vary on;
     gzip_min_length 500;
     gzip_disable "MSIE [1-6]\.";
     gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript
             application/javascript application/json
             application/atom+xml;
             # text/html is included by default


     # According to the HTTP standard, headers with underscores are perfectly valid.
     # However, nginx defaults to dropping headers containing underscores, as they
     # might introduce ambiguities when mapping headers to CGI variables.
     #
     # Since this is not a problem with Ruby on Rails, we can safely enable them.
     underscores_in_headers on;

     keepalive_timeout  30s;


    # The ngx_http_limit_conn_module module is used to limit the number of connections per the defined key, in particular, the number of connections from a single IP address.

    # Not all connections are counted. A connection is counted only if it has a request being processed by the server and the whole request header has already been read.
#  limit_conn_zone $binary_remote_addr zone=addr:10m;
# --------------------------------------------------------
  # It's possible to organize the server configuration in different files.
  #
  # Typically, these site-specific files contain at least:
  #  - a server{} block
  #  - an upstream{} block
  #
  # The convention is to store configuration files in:
  #    /etc/nginx/sites-availbale/
  #
  # and then symlink them into:
  #    /etc/nginx/sites-enabled/
  #
  # with:
  #  $ ln -s /etc/nginx/sites-availbale/example.com.conf /etc/nginx/sites-enabled/example.com.conf
  #
  # After that, send a HUP signal to the nginx master to reload the configuration on the fly:
  #  $ sudo kill -HUP `cat /var/run/nginx.pid`
  #
    include /etc/nginx/conf.d/*.conf;
}
