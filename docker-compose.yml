version: '3'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile-postgres
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
      - '/home/deploy/pgdata/etc:/etc/postgresql'
      - '/home/deploy/pgdata/log:/var/log/postgresql'
      - '/home/deploy/pgdata/data:/var/lib/postgresql/data'
  redis:
    image: 'redis:4.0-alpine'
    command: redis-server --requirepass wsciAqNwgG9D7cF^gVXi9NivbUXGzZ1qDia4bQ
    volumes:
      - 'redis:/data'

  sidekiq:
    build: .
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - '.:/app'
    links:
      - 'db'
      - 'redis'
    env_file:
      - '.env'
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - 'db'
      - 'sidekiq'
    links:
      - 'db:db'
    volumes:
      - 'app-gems:/usr/local/bundle'
      # Mounts the app code (".") into the container's "/usr/src/app" folder:
      #- .:/usr/src/app
      # Mounts a persistable volume in the installed gems folder, so we can add
      # gems to the app without having to build the development image again:
      # - app-gems:/usr/local/bundle

  web:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    depends_on:
      - 'app'
    ports:
      - '80:80'
      - '443:443'

volumes:
  redis:
  postgres-data:
    driver: local
  app-gems:
    driver: local
